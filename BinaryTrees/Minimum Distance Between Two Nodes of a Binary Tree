class GfG {
    
     int mini = Integer.MAX_VALUE;
     
     int solve(Node root, int a, int b){
        if(root == null) return -1;
        
        if(root.left==null && root.right==null){
            if(root.data == a || root.data == b) return 1;
            
            return -1;
        }
        
        int left = solve(root.left, a, b);
        int right = solve(root.right, a, b);
        
        if(left == -1 && right == -1){
            if(root.data==a || root.data==b) return 1;
            
            return -1;
        }
        
        if(left == -1){
            if(root.data==a || root.data==b){
                mini = Math.min(mini, right);
                return right;
            }
            
        return right+1;
        }
        
        if(right == -1){
            if(root.data==a || root.data==b){
                 mini = Math.min(mini, left);
                return left;
            }
            
        return left+1;
        }
        
         mini = Math.min(mini, left+right);
        return left+right;
     }
     
    int findDist(Node root, int a, int b) {
        // Your code here
         if(a == b) return 0;
         if(root == null) return 0;
         
         solve(root, a, b);
         
         return mini;
    }
}
